/*
Задача А: 111521. Флеш-рояль
Вы находитесь в казино, крупье предлагает вам сыграть. Вы начали играть, и вам выдают отсортированную колоду карт с номерами от 1 до N. Он показывает вам трюк:
Мы берем 1 карту и кладем ее на обратную сторону колоды.
Теперь мы берем другую карту, это оказывается карта с номером 1, мы кладем ее за пределы колоды.
Теперь мы берем 2 карты и кладем их на обратную сторону колоды одну за другой.
Теперь мы берем другую карту, и это оказывается карта с номером 2, мы кладем ее за пределы колоды.
Мы выполняем эти действия до последней карты.
Обратите внимание, что на некотором шаге f количество карт в колоде может быть меньше 1, в этом случае некоторые карты могут быть обработаны несколько раз, см. примечания. Вас спросят, можете ли вы повторить этот трюк. По возможности выведите исходное расположение колоды или скажите, если это невозможно.

i = 4: кладём 4 колода [4], откатываем 4 раза.

i = 3: кладём 3 [3,4], откатываем 3 раза [4,3].

i = 2: кладём 2 [2,4,3], откатываем 2 раза [3,2,4].

i = 1: кладём 1 [1,3,2,4], откатываем 1 раз [4,1,3,2].
*/


#include <iostream>
#include <deque>

using namespace std;

int main() {
    int n;
    cin >> n; // Вписываем количество колод карт

    for (int _ = 0; _ < n; _++) { // Создаем цикл для каждой колоды карт
        int c;
        cin >> c; // Вписываем начальную карту

        deque<int> cards;
        for (int i = c; i >= 1; i--) { // Создаем цикл от Последней карты до Начальной
            cards.push_front(i); // Вписываем первое число

            for (int j = 0; j < i; j++) { // Меняем карты с конца до начала, так как мы не знаем какая у нас колода изначально
               if (cards.size() > 1) { // Проверка на количество карт в колоде
                int back = cards.back(); // Берем последнюю карту
                cards.pop_back();
                cards.push_front(back); // И кладем ее в начало, и так далее с каждой картой
               }
            }
        }

        for (int ch : cards) {
            cout << ch << ' ';
        }
        cout << endl;
    }
}