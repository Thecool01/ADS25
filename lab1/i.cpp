/*
Задача I: 197984. Класс для элиты
В классе А ученики хотят назначить классного руководителя. Класс разделился на две части: Сакаянаги и Кацураги. Они решили выбрать лидера следующим образом:
1. Каждый из студентов делает заявление. Они делают заявления по очереди, начиная со студента 1 и заканчивая студентом а. Если студент был отстранен от процедуры, он/она пропускается.
2. Когда студент делает заявление, он /она может отстранить от процедуры любого другого студента. Если кого-то выгоняют с процедуры, он больше не участвует в ней до самого конца.
3. Когда раунд завершен, т.е. все учащиеся сделали свои заявления, процедура повторяется с шага 1.
4. Процесс повторяется до тех пор, пока не останется только один студент, имеющий право участвовать, и этот студент становится лидером группы.
Определите долю лидера группы, если обе фракции играют оптимально (т.е. обе фракции действуют наилучшим образом, чтобы сделать лидера группы из своей фракции).
*/


#include <iostream>
#include <queue>

using namespace std;

int main(){
    int n;
    string s;
    cin >> n >> s;

    queue<int> S, K;

    for (int i = 0; i < s.size(); i++) {
        if (s[i] == 'S') {
            S.push(i); // Пушаем номера S
        }
        else {
            K.push(i); // Пушаем номера K
        }
    }    

    while (!S.empty() && !K.empty()) {
        int S_number = S.front(); // Берем номер первого S в очереди
        S.pop();

        int K_number = K.front(); // Берем номер первого K в очереди
        K.pop();

        if (S_number < K_number) { // Условие: Если номер S < K, то остается S и на оборот
            S.push(S_number + n); 
        }

        else {
            K.push(K_number + n);
        }
    }
    if (S.empty()) {
        cout << "KATSURAGI";
    }
    else {
        cout << "SAKAYANAGI";
    }
    return 0;
}
